name: paddlfly-CI

on:
  push:
    branches: [main]

env:
  AWS_REGION: eu-central-1
  DOCKER_REGISTRY: 575229819261.dkr.ecr.eu-central-1.amazonaws.com

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set container tag
        run: echo "TAG=${GITHUB_REF##*/}-${GITHUB_RUN_ID}" >> $GITHUB_ENV
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ env.AWS_REGION }}
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Install packages
        run: yarn install
      - name: Build and push container
        uses: docker/build-push-action@v2
        with:
          push: true
          file: /Dockerfile
          tags: |
            ${{ env.DOCKER_REGISTRY }}/paddlfly-backend:${{ env.TAG }}
          context: .
      # - name: Build, tag, and push image to Amazon ECR
      #   env:
      #     ECR_REGISTRY: ${{ env.DOCKER_REGISTRY }}
      #     ECR_REPOSITORY: paddlfly-backend
      #     IMAGE_TAG: 1
      #   run: |
      #     # Build a docker container and push it to ECR
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      #     echo "Pushing image to ECR..."
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
